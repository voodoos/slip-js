{"version":3,"sources":["src/modules/util.mjs","src/modules/engine.mjs","src/modules/controller.mjs","src/modules/slip.mjs","src/slip-lib.js","example/slipIntroduction.js"],"names":["myQueryAll","root","selector","avoid","id","Math","random","toString","substr","allElem","Array","from","querySelectorAll","other","filter","value","includes","cloneNoSubslip","elem","newElem","cloneNode","childNodes","forEach","child","classList","contains","placeholder","document","createElement","tagName","add","appendChild","replaceSubslips","clone","subslips","placeholders","subslip","index","replaceWith","rootElem","container","innerHTML","querySelector","slipElem","setTimeout","scaleContainer","fChild","slipContainer","firstChild","style","width","height","addEventListener","ev","console","log","layerX","layerY","body","cursor","timeOutIds","clearTimeout","push","openWindow","browserHeight","openWindowWidth","browserWidth","openWindowHeight","winX","winY","currentScale","currentRotate","universe","slips","counterToString","num","depth","result","roman","decimal","i","length","getOpenWindowHeight","getOpenWindowWidth","getCoord","x","y","scale","moveWindow","rotate","delay","transitionDuration","left","top","transform","moveWindowRelative","dx","dy","dscale","drotate","placeSlip","slip","parseFloat","getAttribute","slipScaleContainer","isNaN","max","offsetWidth","offsetHeight","placeSlips","rootDepth","map","reduce","a","b","placeOpenWindow","window","innerHeight","innerWidth","floor","right","bottom","transformOrigin","parseInt","zIndex","countersToString","counterList","res","updateCounter","counters","stack","getActionIndex","next","showToC","currentSlide","n","getCurrentSlip","Slip","gotoSlip","pop","newCurrentSlide","getMaxNext","nextSlip","previous","currentSlip","previousSlip","getCoordinateInUniverse","getCoordInParen","globalScale","parseScale","split","c","getCoordIter","cInParent","offsetLeft","offsetTop","offsetParent","cParent","getComputedStyle","ret","centerX","centerY","moveToElement","element","options","coord","findSlipCoordinate","currentX","currentY","rootSlip","getSlipTree","name","getActionList","e","function","goToState","state","refreshAll","iter","toc","tree","displayTree","stackWithNumbers","containerElement","nameElement","innerText","fullName","ulElement","subtree","newStackWithNumbers","liElement","toCounter","concat","target","setTocElem","setRootSlip","getRootSlip","engine","speedMove","key","refresh","canvas","display","shiftKey","actionL","ng","getEngine","setEngine","initialHTML","clonedElement","outerHTML","MathJax","startup","promise","then","getCloned","setCloned","queryAll","quer","query","actionList","actionIndex","setActionIndex","actionI","setAction","setNthAction","action","getSubSlipList","doAttributes","str","opacity","remove","visibAt","staticAt","position","visibility","moveDownTo","moveUpTo","moveCenterTo","tocElem","updateToC","list","incrIndex","savedActionIndex","toReturn","doRefresh","firstVisit","init","whenLeaving","subSlipList","offset","d","reveal","revealAll","hide","hideAll","maxTemp","attr","strMax","abs","Engine","IEngine","Controller","IController","ISlip","Util","IUtil","intro","base","beamerPart","future","but","alert","red","blue","savedX","savedY","controller"],"mappings":"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","file":"slipIntroduction.04d4b887.js","sourceRoot":"..","sourcesContent":["export let myQueryAll = (root, selector, avoid) => {\n    avoid = avoid || \".slip\";\n    if (!root.id)\n\troot.id = '_' + Math.random().toString(36).substr(2, 15);;\n    let allElem = Array.from(root.querySelectorAll(selector));\n    let other = Array.from(root.querySelectorAll(\"#\"+root.id+\" \" + avoid + \" \" +selector));\n    return allElem.filter(value => !other.includes(value));\n};\n\nexport function cloneNoSubslip (elem) {\n    let newElem = elem.cloneNode(false);\n    elem.childNodes.forEach((child) => {\n\tif(child.classList && child.classList.contains(\"slip\")){\n\t    let placeholder = document.createElement(child.tagName);\n\t    placeholder.classList.add(\"toReplace\");\n\t    newElem.appendChild(placeholder);\n\t}\n\telse\n\t    newElem.appendChild(cloneNoSubslip(child));\n    });\n    return newElem;\n}\nexport function replaceSubslips(clone, subslips) {\n    let placeholders = myQueryAll(clone, \".toReplace\");\n    subslips.forEach((subslip, index) => {\n\tplaceholders[index].replaceWith(subslip);\n    });\n}","import { myQueryAll } from './util'\n\nexport default function (root) {\n    function prepareRoot (rootElem) {\n\tlet container = document.createElement(\"div\");\n\tcontainer.innerHTML = \n\t    '\t<div id=\"open-window\">\\\n\t    <div class=\"format-container\">\\\n\t    <div class=\"rotate-container\">\\\n\t\t<div class=\"scale-container\">\\\n\t\t    <div class=\"universe movable\" id=\"universe\">\\\n\t\t\t<div width=\"10000\" height=\"10000\" class=\"fog\"></div>\\\n                        <div class=\"placeHolder\"></div>\\\n\t\t    </div>\\\n\t\t</div>\\\n\t\t</div>\\\n\t    </div>\\\n\t</div>\\\n\t<div class=\"cpt-slip\">0</div>\\\n\t<div class=\"toc-slip\" style=\"display:none;\"></div>';\n\trootElem.replaceWith(container);\n\tcontainer.querySelector(\".placeHolder\").replaceWith(rootElem);\n\trootElem.querySelectorAll(\".slip\").forEach((slipElem) => {\n\t    setTimeout(() => {\n\t\tvar scaleContainer = document.createElement('div');\n\t\tvar slipContainer = document.createElement('div');\n\t\tscaleContainer.classList.add(\"slip-scale-container\");\n\t\tslipContainer.classList.add(\"slip-container\");\n\t\tlet fChild;\n\t\twhile((fChild = slipElem.firstChild)) {\n\t\t    slipContainer.appendChild(fChild);\n\t\t}\n\t\tscaleContainer.appendChild(slipContainer);\n\t\tslipElem.appendChild(scaleContainer);\n\t    },0);\n\t});\n\trootElem.style.width = \"unset\";\n\trootElem.style.height = \"unset\";\n\tdocument.querySelectorAll(\".background-canvas\").forEach((elem)=> {elem.addEventListener(\"click\", (ev) => { console.log(\"vous avez cliquez aux coordonnées : \", ev.layerX, ev.layerY); });});\t\n    }\n    prepareRoot(root);\n\n    // Constants\n    document.body.style.cursor = \"auto\";\n    let timeOutIds = [];\n    document.body.addEventListener(\"mousemove\", (ev) => {\n\ttimeOutIds.forEach((id) => { clearTimeout(id); });\n\tdocument.body.style.cursor = \"auto\";\n\ttimeOutIds.push(setTimeout(() => { document.body.style.cursor = \"none\";}, 5000));\n    });\n    let openWindow = document.querySelector(\"#open-window\");\n    let universe = document.querySelector(\"#universe\");\n    let slips = universe.querySelectorAll(\".slip:not(.root)\");\n    let browserHeight, openWindowWidth;\n    let browserWidth, openWindowHeight;\n    this.getOpenWindowHeight = () => openWindowHeight;\n    this.getOpenWindowWidth = () => openWindowWidth;\n\n    let winX, winY;\n    let currentScale, currentRotate;\n    this.getCoord = () => { return {x: winX, y: winY, scale: currentScale};};\n    this.moveWindow = function (x, y, scale, rotate, delay) {\n\tconsole.log(\"move to\", x, y, \"with scale, rotate, delay\", scale, rotate, delay);\n\tcurrentScale = scale;\n\tcurrentRotate = rotate;\n\twinX = x ;\n\twinY = y;\n\tconsole.log(x,y);\n\tsetTimeout(() => {\n\t    document.querySelector(\".scale-container\").style.transitionDuration = delay+\"s\";\n\t    document.querySelector(\".rotate-container\").style.transitionDuration = delay+\"s\";\n\t    universe.style.transitionDuration = delay+\"s, \"+delay+ \"s\"; \n\t    universe.style.left = -(x*1440 - 1440/2)+\"px\";\n\t    universe.style.top = -(y*1080 - 1080/2)+\"px\";\n\t    document.querySelector(\".scale-container\").style.transform = \"scale(\"+(1/scale)+\")\";\n\t    document.querySelector(\".rotate-container\").style.transform = \"rotate(\"+(rotate)+\"deg)\";\n\t},0);\n    };\n    this.moveWindowRelative = function(dx, dy, dscale, drotate, delay) {\n\tthis.moveWindow(winX+dx, winY+dy, currentScale+dscale, currentRotate+drotate, delay);\n    };\n    this.placeSlip = function(slip) {\n\t// console.log(\"debug Previous (slip)\", slip);\n\t// let posX = 0.5;\n\t// let posY = 0.5;\n\t// let x=parseFloat(slip.getAttribute(\"pos-x\")), y=parseFloat(slip.getAttribute(\"pos-y\"));\n\tlet scale = parseFloat(slip.getAttribute(\"scale\"));\n\t// // console.log(slip);\n\tlet slipScaleContainer = slip.querySelector(\".slip-scale-container\");\n\t// let rotate = 0;\n\tscale = isNaN(scale) ? 1 : scale ;\n\t// x = (isNaN(x) ? posX : x);\n\t// y = (isNaN(y) ? posY : y);\n\t// slip.setAttribute(\"pos-x\", x);\n\t// slip.setAttribute(\"pos-y\", y);\n\t// slip.setAttribute(\"scale\", scale);\n\t// slip.setAttribute(\"rotate\", rotate);\n\t// posX = x + 1;\n\t// posY = y;\n\t// slip.style.top = (y*1080 - 1080/2)+\"px\";\n\t// slip.style.left = (x*1440 - 1440/2)+\"px\";\n\t// if(!slip.classList.contains(\"permanent\"))\n\t// \tslip.style.zIndex = \"-1\";\n\t// slip.style.transformOrigin = \"50% 50%\";\n\tslipScaleContainer.style.transform = \"scale(\"+scale+\")\";\n\tslip.style.width = (Math.max(slipScaleContainer.offsetWidth, 1440))*scale+\"px\";\n\tslip.style.height = (Math.max(slipScaleContainer.offsetHeight, 1080))*scale+\"px\";\t\n    };\n    this.placeSlips = function () {\n\t// let posX = 0.5;\n\t// let posY = 0.5;\n\tlet depth = function (elem) {\n\t    console.log(\"debug depth (elem)\", elem);\n\t    let subslips = myQueryAll(elem, \".slip\");\n\t    console.log(\"debug depth (subslips)\", elem);\n\t    return 1+subslips.map(depth).reduce((a,b) => Math.max(a,b),0);\n\t};\n\tlet rootDepth = depth(document.body);\n\tconsole.log(\"debug\", rootDepth);\n\tfor(let i= 0; i<rootDepth; i++)\n\t    slips.forEach(this.placeSlip);\t\n    };\n    setTimeout(() => {\n\tthis.placeSlips();\n    },0);\n    this.placeOpenWindow = function () {\n\tbrowserHeight = window.innerHeight;\n\tbrowserWidth = window.innerWidth;\n\tif(browserHeight/3 < browserWidth/4) {\n\t    openWindowWidth = Math.floor((browserHeight*4)/3);\n\t    openWindowHeight = browserHeight;\n\t    openWindow.style.left = ((window.innerWidth - openWindowWidth) /2)+\"px\";\n\t    openWindow.style.right = ((window.innerWidth - openWindowWidth) /2)+\"px\";\n\t    openWindow.style.width = (openWindowWidth)+\"px\";\n\t    openWindow.style.top = \"0\";\n\t    openWindow.style.bottom = \"0\";\n\t    openWindow.style.height = (openWindowHeight)+\"px\";\n\t}\n\telse {\n\t    openWindowHeight = Math.floor((browserWidth*3)/4);\n\t    openWindowWidth = browserWidth;\n\t    openWindow.style.top = ((window.innerHeight - openWindowHeight) /2)+\"px\";\n\t    openWindow.style.bottom = ((window.innerHeight - openWindowHeight) /2)+\"px\";\n\t    openWindow.style.height = (openWindowHeight)+\"px\";\n\t    openWindow.style.right = \"0\";\n\t    openWindow.style.left = \"0\";\n\t    openWindow.style.width = openWindowWidth+\"px\";\n\t}\n\tdocument.querySelector(\".scale-container\").style.transformOrigin = (1440/2)+\"px \"+(1080/2)+\"px\";\n\tdocument.querySelector(\".rotate-container\").style.transformOrigin = (1440/2)+\"px \"+(1080/2)+\"px\";\n\tdocument.querySelector(\".format-container\").style.transform = \"scale(\"+(openWindowWidth/1440)+\")\";\n\tdocument.querySelector(\".cpt-slip\").style.right =  (parseInt(openWindow.style.left)) + \"px\";\n\tdocument.querySelector(\".cpt-slip\").style.bottom =  \"0\";\n\tdocument.querySelector(\".cpt-slip\").style.zIndex =  \"10\";\n    };\n    this.placeOpenWindow();\n    window.addEventListener(\"resize\", (ev) => {\n\tthis.placeOpenWindow();\n\tthis.moveWindow(winX, winY, currentScale, currentRotate, 0);\n    });\n\n    // Taken from https://selftaughtjs.com/algorithm-sundays-converting-roman-numerals\n    // Use in showing roman numbers for slip number\n    function counterToString(num, depth) {\n\tif(depth == 1 || depth > 3)\n\t    return num.toString();\n\tlet result = '';\n\tlet decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n\tlet roman;\n\tif(depth == 0)\n\t    roman = [\"M\", \"CM\",\"D\",\"CD\",\"C\", \"XC\", \"L\", \"XL\", \"X\",\"IX\",\"V\",\"IV\",\"I\"];\n\telse\n\t    roman = [\"m\", \"cm\",\"d\",\"cd\",\"c\", \"xc\", \"l\", \"xl\", \"x\",\"ix\",\"v\",\"iv\",\"i\"];\n\tfor (var i = 0;i<=decimal.length;i++) {\n\t    while (num%decimal[i] < num) {     \n\t\tresult += roman[i];\n\t\tnum -= decimal[i];\n\t    }\n\t}\n\treturn result;\n    }\n    this.countersToString = (counterList) => {\n\tlet res = '';\n\tres += counterToString(counterList[0]+1, 0);\n\tfor(let i = 1; i < counterList.length; i++)\n\t    res += \".\" + counterToString(counterList[i]+1, i);\n\treturn res;\t\n    };\n    this.updateCounter = function () {\n\tlet counters = stack.map((slip) => slip.getActionIndex());\n\tdocument.querySelector(\".cpt-slip\").innerHTML = this.countersToString(counters);\t\n    };\n    this.next = () => {\n\tif(document.querySelector(\".toc-slip\").innerHTML == \"\")\n\t    this.showToC();\n\t// return true if and only if the stack changed\n\tlet currentSlide = this.getCurrentSlip();\n\tlet n = currentSlide.next();\n\tthis.updateCounter();\n\tif(n instanceof Slip) {\n\t    this.gotoSlip(n);\n\t    this.push(n);\n\t    this.next();\n\t    // this.showToC();\n\t    return true;\n\t}\n\telse if(!n) {\n\t    this.pop();\n\t    let newCurrentSlide = this.getCurrentSlip();\n\t    this.gotoSlip(newCurrentSlide);\n\t    // newCurrentSlide.incrIndex();\n\t    if(stack.length > 1 || newCurrentSlide.getActionIndex() < newCurrentSlide.getMaxNext())\n\t\tthis.next();\n\t    // this.showToC();\n\t    return true;\n\t    // console.log(stack);\n\t}\n\t// this.showToC();\n\treturn false;\n    };\n    this.nextSlip = function () {\n\t// Do this.next() untill the stack change\n\twhile(!this.next()) {}\n    };\n    this.previous = () => {\n\tlet currentSlip = this.getCurrentSlip();\n\tlet n = currentSlip.previous();\n\tconsole.log(\"debug previous (currentSlip, n)\", currentSlip, n);\n\tif(n instanceof Slip) {\n\t    this.gotoSlip(n);\n\t    this.push(n);\n\t    // this.showToC();\n\t    return true;\n\t}\n\telse if(!n) {\n\t    this.pop();\n\t    let newCurrentSlide = this.getCurrentSlip();\n\t    this.gotoSlip(newCurrentSlide);\n\t    // newCurrentSlide.incrIndex();\n\t    if(stack.length > 1 || newCurrentSlide.getActionIndex() > -1)\n\t\tthis.previous();\n\t    // console.log(stack);\n\t    // this.showToC();\n\t    return true;\n\t}\n\t// this.showToC();\n\treturn false;\n\t// console.log(\"returned\", n);\n    };\n    this.previousSlip = function () {\n\t// Do this.previous() untill the stack change\n\twhile(!this.previous()) {}\n    };\n\n    this.getCoordinateInUniverse = function (elem) {\n\tconsole.log(\"debug getcoord elem\", elem);\n\tlet getCoordInParen = (elem) => {\n\t    return {x: elem.offsetLeft, y:elem.offsetTop};\t    \n\t};\n\tlet globalScale = 1;\n\tlet parseScale = function(transform) {\n\t    if (transform == \"none\")\n\t\treturn 1;\n\t    return parseFloat(transform.split(\"(\")[1].split(\",\")[0]);\n\t};\n\tlet getCoordIter = (elem) => {\n\t    let cInParent = getCoordInParen(elem);\n\t    if(elem.offsetParent.classList.contains(\"universe\"))\n\t    {\n\t\tconsole.log(\"universe\", cInParent);\n\t\treturn cInParent;\n\t    }\n\t    let cParent = getCoordIter(elem.offsetParent);\n\t    let style = window.getComputedStyle(elem.offsetParent);\n\t    // console.log(style);\n\t    let scale;\n\t    // console.log(\"style\", style.transform);\n\t    // if (style.transform == \"none\")\n\t    // \tscale = 1;\n\t    // else\n\t    // \tscale = parseFloat(style.transform.split(\"(\")[1].split(\",\")[0]);\n\t    scale = parseScale(style.transform);\n\t    // console.log(style.transform);\n\t    // console.log(\"scale\", scale);\n\t    // console.log(\"globalScale\", globalScale);\n\t    globalScale *= scale;\n\t    // let scale = 1 ; // Has to parse/compute the scale, for now always 1\n\t    // console.log(\"at step\",  \"cParent.x\", cParent.x, \"cInParen.x\", cInParent.x, \"scale\", scale);\n\t    return {x:cParent.x+cInParent.x*globalScale, y:cParent.y+cInParent.y*globalScale };\n\t};\n\tlet c = getCoordIter(elem);\n\tlet style = window.getComputedStyle(elem);\n\tlet scale = parseScale(style.transform);\n\tglobalScale *= scale;\n\tconsole.log(\"getCoord\", {x:c.x/1440+0.5, y:c.y/1080+0.5}, \"globalScale\", globalScale, style.transform, scale);\n\tlet ret = { x: c.x/1440,\n\t\t    y: c.y/1080,\n\t\t    centerX:c.x/1440+0.5*elem.offsetWidth/1440*globalScale,\n\t\t    centerY:c.y/1080+0.5*elem.offsetHeight/1080*globalScale,\n\t\t    width: elem.offsetWidth/1440*globalScale,\n\t\t    height: elem.offsetHeight/1080*globalScale,\n\t\t    scale: globalScale };\n\tconsole.log(ret);\n\treturn ret;\n\t// return {x:c.x/1440+elem*globalScale*scale, y:c.y/1080+0.5*globalScale*scale, scale: globalScale*scale};\n\t// return {x: this.element.offsetLeft/1440+0.5, y:this.element.offsetTop/1080+0.5};\n    };\n    this.moveToElement = function(element, options) {\n\tlet coord = this.getCoordinateInUniverse(element);\n\tlet actualSize = {width: element.offsetWidth*coord.scale, height: element.offsetHeight*coord.scale};\n\tif(options)\n\tthis.moveWindow(coord.x, coord.y, coord.scale, 0, options.delay ? options.delay : 1);\n    };\n    this.gotoSlip = function(slip, options) {\n\tconsole.log(\"we goto slip\");\n\toptions = options ? options : {};\n\tconsole.log(\"options is \", options);\n\tif(slip.element.classList.contains(\"slip\"))\n\t    setTimeout(() => {\n\t\tlet coord = slip.findSlipCoordinate();\n\t\tif(typeof slip.currentX != \"undefined\" && typeof slip.currentY != \"undefined\")\n\t\t    this.moveWindow(slip.currentX, slip.currentY, coord.scale, slip.rotate, options.delay ? options.delay : slip.delay);\n\t\telse\n\t\t    this.moveWindow(coord.x, coord.y, coord.scale, slip.rotate, options.delay ? options.delay : slip.delay);\n\t    },0);\n\telse\n\t    setTimeout(() => {\n\t\tconsole.log(\"debug slip element\", slip.element);\n\t\tlet coord = this.getCoordinateInUniverse(slip.element);\n\t\tthis.moveWindow(coord.centerX, coord.centerY, Math.max(coord.width, coord.height), 0, options.delay ? options.delay : slip.delay);\n\t    },0);\n    };\n    let rootSlip = new Slip(root.id, \"Presentation\", [], this, {});\n    let stack = [rootSlip];\n\n    // Stack Management:\n    this.push = function (n) {\n\tstack.push(n);\n\treturn ;\n    };\n    this.pop = function () {\n\tlet n = stack.pop();\n\tif(stack.length == 0)\n\t    stack.push(n);\n\treturn n;\n    };\n    this.getCurrentSlip = function () {\n\treturn stack[stack.length -1];\n    };\n    this.getSlipTree = function (slip) {\n\tslip = slip || rootSlip;\n\tif(slip instanceof Slip) \n\t    return {name: slip.name, slip: slip, subslips: slip.getActionList().map((e) => this.getSlipTree(e))};\n\treturn {function: true};\n    };\n\n    this.goToState = function(state) {\n\tlet iter = (state) => {\n\t    if(state.length == 0)\n\t\treturn;\n\t    iter(state[0]);\n\t    while(state[1].getActionIndex()<state[2])\n\t\tthis.next();\n\t};\n\tstack = [rootSlip];\n\trootSlip.refreshAll();\n\titer(state);\n\tthis.gotoSlip(state[1]);\n    };\n\n    this.showToC = function () {\n\tconsole.log(\"debug showtoc\");\n\tlet toc = document.querySelector(\".toc-slip\");\n\t// let innerHTML = \"\";\n\tlet globalElem = document.createElement(\"div\");\n\tlet tree = this.getSlipTree();\n\t// let before = true;\n\tlet displayTree = (tree, stackWithNumbers) => {\n\t    console.log(\"debug treee\", tree);\n\t    let containerElement = document.createElement(\"div\");\n\t    let nameElement = document.createElement(\"div\");\n\t    // if(before)\n\t    // \tnameElement.style.color = \"blue\";\n\t    // else\n\t    // \tnameElement.style.color = \"yellow\";\n\t    // if(tree.slip == this.getCurrentSlip()) {\n\t    // \tnameElement.style.color = \"red\";\n\t    // \tbefore = false;\n\t    // }\n\t\t\n\t    nameElement.innerText = tree.slip.fullName ? tree.slip.fullName : tree.slip.name ; //+ \" (\" + (tree.slip.getActionIndex()+1) + \"/\" + (tree.slip.getMaxNext()+1) + \")\";\n\t    containerElement.appendChild(nameElement);\n\t    // innerHTML += \"<div>\"+tree.name+\"</div>\";\n\t    if(tree.subslips.length > 0) {\n\t\tlet ulElement = document.createElement(\"ul\");\n\t\t// innerHTML += \"<ul>\";\n\t\ttree.subslips.forEach((subtree, index) => {\n\t\t    let newStackWithNumbers = [stackWithNumbers, tree.slip, index];\n\t\t    let liElement = document.createElement(\"li\");\n\t\t    // innerHTML += \"<li>\";\n\t\t    if(subtree.function) {\n\t\t\tlet toCounter = (c) => {\n\t\t\t    if(c.length == 0)\n\t\t\t\treturn [];\n\t\t\t    return toCounter(c[0]).concat([c[2]]);\n\t\t\t};\n\t\t\tliElement.innerText = this.countersToString(toCounter(newStackWithNumbers));\n\t\t\t//\t\t\tliElement.innerText = \"\"+(index+1);\n\t\t\tliElement.classList.add(\"toc-function\");\n\t\t    } else\n\t\t\tliElement.appendChild(displayTree(subtree, newStackWithNumbers));\n\t\t    liElement.addEventListener(\"click\", (ev) => {\n\t\t    \tif(ev.target == liElement) {\n\t\t    \t    this.goToState(newStackWithNumbers);\n\t\t    \t    console.log(\"newstack\", newStackWithNumbers);\n\t\t    \t}\n\t\t    });\n\t\t    ulElement.appendChild(liElement);\n\t\t    \n\t\t    // innerHTML += \"</li>\";\n\t\t});\n\t\tcontainerElement.appendChild(ulElement);\n\t\ttree.slip.setTocElem(containerElement);\n\t\t// innerHTML += \"</ul>\";\n\t    }\n\t    console.log(\"debug tree, will return\", containerElement);\n\t    // containerElement.addEventListener(\"click\", () => { console.log(stackWithNumbers);});\n\t    return containerElement;\n\t};\n\ttoc.innerHTML = \"\";\n\t// toc.innerHTML = innerHTML;\n\ttoc.appendChild(displayTree(tree, []));\n    };\n    \n    // this.getRootSlip = () => rootSlip;\n    this.setRootSlip = (root) => {\n\trootSlip = root;\n\tstack = [rootSlip];\n    };\n    this.getRootSlip = () => rootSlip;\n};","export default class {\n  constructor(engine) {\n    // this.engine = engine; // For now this is useless given the usage of controller\n\n    let speedMove = 1;\n\n    let ev_keypress = ev => {\n      switch (ev.key) {\n        case \"f\":\n          speedMove = ((speedMove + 4) % 30) + 1;\n          break;\n        case \"r\":\n          engine.getCurrentSlip().refresh();\n          break;\n        case \"#\":\n          document.querySelectorAll(\".slip\").forEach(slip => {\n            slip.style.zIndex = \"-1\";\n          });\n          document.querySelectorAll(\".background-canvas\").forEach(canvas => {\n            canvas.style.zIndex = \"1\";\n          });\n      }\n    };\n\n    let ev_keydown = ev => {\n      let openWindowHeight = engine.getOpenWindowHeight();\n      let openWindowWidth = engine.getOpenWindowWidth();\n      switch (ev.key) {\n        case \"l\": // Bas\n          engine.moveWindowRelative(0, speedMove / openWindowHeight, 0, 0, 0.1);\n          break;\n        case \"o\": // Haut\n          engine.moveWindowRelative(0, -speedMove / openWindowHeight, 0, 0, 0.1);\n          break;\n        case \"k\": // Gauche\n          engine.moveWindowRelative(-speedMove / openWindowWidth, 0, 0, 0, 0.1);\n          break;\n        case \"m\": // Droite\n          engine.moveWindowRelative(speedMove / openWindowWidth, 0, 0, 0, 0.1);\n          break;\n        case \"i\": // Rotate\n          engine.moveWindowRelative(0, 0, 0, 1, 0.1);\n          break;\n        case \"p\": //Unrotate\n          engine.moveWindowRelative(0, 0, 0, -1, 0.1);\n          break;\n        case \"z\": // Zoom\n          engine.moveWindowRelative(0, 0, 0.01, 0, 0.1);\n          break;\n        case \"Z\": // Unzoom\n          engine.moveWindowRelative(0, 0, -0.01, 0, 0.1);\n          break;\n        case \"T\":\n          engine.showToC();\n          break;\n        case \"t\":\n          // todo: hideToC ?\n          document.querySelector(\".toc-slip\").style.display =\n            document.querySelector(\".toc-slip\").style.display == \"none\" ? \"block\" : \"none\";\n          break;\n        case \"ArrowRight\":\n          console.log(ev);\n          if (ev.shiftKey) engine.nextSlip();\n          else engine.next();\n          break;\n        case \"ArrowLeft\":\n          if (ev.shiftKey) engine.previousSlip();\n          else engine.previous();\n          break;\n        case \"ArrowUp\":\n          engine.pop();\n      }\n    };\n\n    document.addEventListener(\"keypress\", ev_keypress);\n    document.addEventListener(\"keydown\", ev_keydown);\n  }\n}\n","import { cloneNoSubslip, myQueryAll, replaceSubslips } from './util'\n\nexport default function (name, fullName, actionL, ng, options) {\n    let engine = ng;\n    this.fullName = fullName;\n    this.name = name;\n    \n    this.getEngine = () => engine;\n    this.setEngine = (ng) => engine = ng;\n    \n    // let presentation = present;\n    // this.getPresentation = () => presentation;\n    // this.setPresentation = (present) => presentation = present;\n    \n    this.element = document.querySelector(\"#\"+name);\n    console.log(this.element);\n    let initialHTML = this.element.outerHTML;\n    let clonedElement;\n    MathJax.startup.promise.then(() => {\n        // console.log('MathJax initial typesetting complete');\n\tsetTimeout(() => {clonedElement = cloneNoSubslip(this.element);},0);\n      });\n    let innerHTML = this.element.innerHTML;\n    this.getCloned = () => clonedElement;\n    this.setCloned = (c) => clonedElement = c;\n    \n    this.findSlipCoordinate = () => { // rename to getCoordInUniverse\n\tlet coord = engine.getCoordinateInUniverse(this.element);\n\tconsole.log(\"debug findslipcoordinate\", coord);\n\tcoord.scale *= this.scale;\n\tcoord.y = coord.y + 0.5*coord.scale;\n\tcoord.x = coord.centerX;\n\tconsole.log(\"debug findslipcoordinate\", coord);\n\treturn coord;\n    };\n    \n    this.scale = parseFloat(this.element.getAttribute(\"scale\"));\n    if(typeof this.scale == \"undefined\" || isNaN(this.scale)) this.scale = 1;\n    this.rotate = parseFloat(this.element.getAttribute(\"rotate\"));\n    this.delay = isNaN(parseFloat(this.element.getAttribute(\"delay\"))) ? 0 : (parseFloat(this.element.getAttribute(\"delay\")));\n    \n    let coord = this.findSlipCoordinate();\n    console.log(coord);\n    this.x = coord.x;\n    this.y = coord.y;\n    \n    this.queryAll = (quer) => {\n\tlet allElem = Array.from(this.element.querySelectorAll(quer));\n\t// console.log(\"allElem\", allElem);\n\tlet other = Array.from(this.element.querySelectorAll(\"#\"+name+\" .slip \"+quer));\n\t// console.log(\"other\", other, \".slide \"+quer);\n\treturn allElem.filter(value => !other.includes(value));\n    };\n    this.query = (quer) => {\n\treturn this.queryAll(quer)[0];\n    };\n    let actionList = actionL;\n    let actionIndex = -1;\n    // let actionIndex=-1;\n    this.setActionIndex = (actionI) => actionIndex = actionI;\n    this.getActionIndex = () => actionIndex;\n    this.setAction = (actionL) => {actionList = actionL;};\n    this.getActionList = () => {\n\tlet ret = [];\n\tfor(let i = 0;i <= this.getMaxNext(); i++) {\n\t    if(typeof actionList[i] == \"function\" || actionList[i] instanceof Slip)\n\t\tret[i] = actionList[i];\n\t    else\n\t\tret[i] = () => {};\n\t}\n\treturn ret;\n    };\n    this.setNthAction = (n,action) => {actionList[n] = action;};\n\n    this.getSubSlipList = function () {\n\treturn actionList.filter((action) => action instanceof Slip);\n    };\n    \n    this.doAttributes = () => {\n\tthis.queryAll(\"*[mk-hidden-at]\").forEach((elem) => {\n\t    let hiddenAt = elem.getAttribute(\"mk-hidden-at\").split(\" \").map((str) => parseInt(str));\n\t    if(hiddenAt.includes(actionIndex))\n\t\telem.style.opacity = \"0\";});\t\n\tthis.queryAll(\"*[mk-visible-at]\").forEach((elem) => {\n\t    let visibleAt = elem.getAttribute(\"mk-visible-at\").split(\" \").map((str) => parseInt(str));\n\t    if(visibleAt.includes(actionIndex))\n\t\telem.style.opacity = \"1\";});\t\n\tthis.queryAll(\"*[mk-emphasize-at]\").forEach((elem) => {\n\t    let emphAt = elem.getAttribute(\"mk-emphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(emphAt.includes(actionIndex))\n\t\telem.classList.add(\"emphasize\");});\t\n\tthis.queryAll(\"*[mk-unemphasize-at]\").forEach((elem) => {\n\t    let unemphAt = elem.getAttribute(\"mk-unemphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(unemphAt.includes(actionIndex))\n\t\telem.classList.remove(\"emphasize\");});\t\n\tthis.queryAll(\"*[emphasize-at]\").forEach((elem) => {\n\t    let emphAt = elem.getAttribute(\"emphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(emphAt.includes(actionIndex))\n\t\telem.classList.add(\"emphasize\");\n\t    else\n\t\telem.classList.remove(\"emphasize\");\n\t});\t\n\tthis.queryAll(\"*[chg-visib-at]\").forEach((elem) => {\n\t    let visibAt = elem.getAttribute(\"chg-visib-at\").split(\" \").map((str) => parseInt(str));\n\t    if(visibAt.includes(actionIndex))\n\t\telem.style.opacity = \"1\";\n\t    if(visibAt.includes(-actionIndex))\n\t\telem.style.opacity = \"0\";\n\t});\t\n\tthis.queryAll(\"*[static-at]\").forEach((elem) => {\n\t    let staticAt = elem.getAttribute(\"static-at\").split(\" \").map((str) => parseInt(str));\n\t    if(staticAt.includes(-actionIndex)){\n\t\telem.style.position = \"absolute\";\n\t\telem.style.visibility = \"hidden\";\n\t    }\n\t    if(staticAt.includes(actionIndex)) {\n\t\telem.style.position = \"static\";\n\t\telem.style.visibility = \"visible\";\n\t    }\n\t});\t    \n\tthis.queryAll(\"*[down-at]\").forEach((elem) => {\n\t    let goDownTo = elem.getAttribute(\"down-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goDownTo.includes(actionIndex))\n\t\tthis.moveDownTo(elem, 1);\n\t});\n\tthis.queryAll(\"*[up-at]\").forEach((elem) => {\n\t    let goTo = elem.getAttribute(\"up-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goTo.includes(actionIndex))\n\t\tthis.moveUpTo(elem, 1);});\n\tthis.queryAll(\"*[center-at]\").forEach((elem) => {\n\t    let goDownTo = elem.getAttribute(\"center-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goDownTo.includes(actionIndex))\n\t\tthis.moveCenterTo(elem, 1);});\t\n    };\n\n    this.setTocElem = (tocElem) => {this.tocElem = tocElem;};\n    this.updateToC = () => {\n\tif(!this.tocElem)\n\t    return;\n\tlet list = myQueryAll(this.tocElem, \"li\", \"li\");\n\tconsole.log(\"debug updateToc\", this.name, list);\n\tlet i;\n\tfor(i=0;i<this.getActionIndex(); i++) {\n\t    console.log(\"debug updateToc, before with i=\", i);\n\t    list[i].classList.remove(\"before\", \"after\", \"current\");\n\t    list[i].classList.add(\"before\");\t    \n\t}\n\t// if(i!=0) i++;\n\tif(i<=this.getActionIndex()) {\n\t    console.log(\"debug updateToc, current with i=\", i);\n\t    list[i].classList.remove(\"before\", \"after\", \"current\");\n\t    list[i].classList.add(\"current\");\n\t    i++;\n\t}\n\tfor(i;i<=this.getMaxNext(); i++) {\n\t    console.log(\"debug updateToc, after with i=\", i);\n\t    list[i].classList.remove(\"before\", \"after\", \"current\");\n\t    list[i].classList.add(\"after\");\n\t}\t\n    };\n    this.incrIndex = () => {\n\tconsole.log(\"incrIndex\");\n\tactionIndex = actionIndex+1;\n\tthis.doAttributes();\n\tthis.updateToC();\n\t// if(this.tocElem)\n\t//     this.tocElem.innerText = actionIndex;\n\t// this.hideAndShow();\n    };\n    \n    this.next = function () {\n\t// if(actionIndex == -1) {\n\t//     this.incrIndex();\n\t//     this.firstVisit();\n\t//     return true;\n\t// }\n\tif(actionIndex >= this.getMaxNext())\n\t    return false;\n\tthis.incrIndex();\n\t// console.log(actionList);\n\tif(typeof actionList[actionIndex] == \"function\") {\n\t    // console.log(\"here\");\n\t    actionList[actionIndex](this);\n\t}\n\tif(actionList[actionIndex] instanceof Slip){\n\t    // if(!actionList[actionIndex].next()) {\n\t    // \t// actionIndex += 1;\n\t    // \tthis.incrIndex();\n\t    // }\n\t    return actionList[actionIndex];\n\t}\n\t// else\n\t//     this.incrIndex();\n\t// }, 0);\n\t// this.incrIndex();\n\treturn true;\n    };\n    this.previous = () => {\n\tlet savedActionIndex = this.getActionIndex();\n\tthis.doRefresh();\n\tif(savedActionIndex == -1)\n\t    // this.previousSlip();\n\t    return false;\n \tlet toReturn;\n\twhile(this.getActionIndex()<savedActionIndex-1)\n\t    toReturn = this.next();\n\treturn toReturn;\n\t// this.setCpt();\n    };\n\n    this.firstVisit = () => {\n\tthis.updateToC();\n\tif(options.firstVisit)\n\t    options.firstVisit(this);\n    };\n    this.init = () => {\n\tthis.queryAll(\"*[chg-visib-at]\").forEach((elem) => {\n\t    elem.style.opacity = \"0\";\n\t});\t\n\tthis.queryAll(\"*[static-at]\").forEach((elem) => {\n\t    elem.style.position = \"absolute\";\n\t    elem.style.visibility = \"hidden\";\n\t});\t\n\tthis.doAttributes();\n\tif(options.init)\n\t    options.init(this);\n    };\n    this.whenLeaving = () => {\n\tif(options.whenLeaving)\n\t    options.whenLeaving(this);\n    };\n\t\n    this.refresh = () => {\n\tif(actionList[actionIndex] instanceof Slip)\n\t    actionList[actionIndex].refresh();\n\telse\n\t    this.doRefresh();\n    };\n    this.refreshAll = () => {\n\tactionList.filter((elem) => elem instanceof Slip).forEach((subslip) => { subslip.refreshAll();});\n\tthis.doRefresh();\n    };\n    this.doRefresh = () => {\n\tthis.setActionIndex(-1);\n\tlet subSlipList = myQueryAll(this.element, \".slip\");;\n\tlet clone = clonedElement.cloneNode(true);\n\treplaceSubslips(clone, subSlipList);\n\tthis.element.replaceWith(clone);\n\tthis.element = clone;\n\t// if(typeof hljs != \"undefined\")\n\t//     document.querySelectorAll('pre code').forEach((block) => {\n\t// \thljs.highlightBlock(block);\n\t//     });\n\t// if(MathJax && typeof MathJax.typeset == \"function\")\n\t//     MathJax.typeset();\n\t// else if (MathJax && MathJax.Hub && typeof MathJax.Hub.Typeset == \"function\")\n\t//     MathJax.Hub.Typeset();\n\tthis.init();\n\tthis.firstVisit();\n\tdelete(this.currentX);\n\tdelete(this.currentY);\n\tengine.gotoSlip(this);\n\t// console.log(\"ai\", actionIndex);\n    };\n    this.init(this, engine);\n    this.moveUpTo = (selector, delay,  offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0.0125;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop)/1080-offset)*coord.scale;\n\t    this.currentX = coord.x;\n\t    this.currentY = coord.y+d;\n\t    engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.moveDownTo = (selector, delay, offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0.0125;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop+elem.offsetHeight)/1080 - 1 + offset)*coord.scale;\n\t    this.currentX = coord.x;\n\t    this.currentY = coord.y+d;\n\t    engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.moveCenterTo = (selector, delay, offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop+elem.offsetHeight/2)/1080-1/2+offset)*coord.scale;\n\t    this.currentX = coord.x;\n\t    this.currentY = coord.y+d;\n\t    engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.reveal = (selector) => {\n\tthis.query(selector).style.opacity = \"1\";\n    };\n    this.revealAll = (selector) => {\n\tthis.queryAll(selector).forEach((elem) => { elem.style.opacity = \"1\";});\n    };\n    this.hide = (selector) => {\n\tthis.query(selector).style.opacity = \"0\";\n    };\n    this.hideAll = (selector) => {\n\tthis.queryAll(selector).forEach((elem) => { elem.style.opacity = \"0\";});\n    };\n    this.getMaxNext = () => {\n\tlet maxTemp = actionList.length;\n\t[\"mk-visible-at\",\n\t \"mk-hidden-at\",\n\t \"mk-emphasize-at\",\n\t \"mk-unemphasize-at\",\n\t \"emphasize-at\",\n\t \"chg-visib-at\",\n\t \"up-at\",\n\t \"down-at\",\n\t \"center-at\",\n\t \"static-at\",\n\t].forEach((attr) => {\n\t     this.queryAll(\"*[\"+attr+\"]\").forEach((elem) => {\n\t\t elem.getAttribute(attr).split(\" \").forEach((strMax) => {\n\t\t     maxTemp = Math.max(Math.abs(parseInt(strMax)),maxTemp);\n\t\t });\n\t     });\n\t });\n\treturn maxTemp;\t\n    };\n}\n","import IEngine from './modules/engine'\nimport IController from './modules/controller.mjs'\nimport ISlip from './modules/slip'\nimport * as IUtil from './modules/util'\n\n/**\n * Allows slip-js to be used as a module\n */\nexport const Engine = IEngine;\nexport const Controller = IController;\nexport const Slip = ISlip;\nexport const Util = IUtil;\n\n/**\n * Allows slip-js to be used as simple CDN-included file\n */\nwindow.Engine = IEngine;\nwindow.Controller = IController;\nwindow.Slip = ISlip;\nwindow.Util = IUtil;","import { Engine, Slip } from '../src/slip-lib'\n\nlet engine = new Engine(document.querySelector(\"#rootSlip\"));\nlet rootSlip = engine.getRootSlip();\n// let rootSlip = new Slip(\"rootSlip\", [], engine, {});\nengine.setRootSlip(rootSlip);\n//rootSlip.setEngine(engine);\n\n// We want a fine control, so we don't let the presentation order the slips by their order of appearance in the HTML file.\n// (this is mostly because we want the slips \"red\" and \"blue\" in the middle of the slip \"future\")\n\n// Creation of slips\nlet intro = new Slip(\"intro\", \"Slip Intro\", [], engine, {});\nlet base = new Slip(\"base\", \"Slip Basics\", [], engine, {});\nlet beamerPart = new Slip(\"beamer-part\", \"Boring part of Slip\", [], engine, {});\n\n// All JS added must be done in the init or the firstVisit function\nlet future = new Slip(\"future\", \"Fun part of Slip\", [], engine, {init: (slip) => { slip.delay = 0;}});\n\nfuture.setNthAction(0, (slip) => {\n    let but = slip.query(\"#mouse\");\n    but.addEventListener(\"mouseenter\", (ev) => {\n\tbut.style.left = (but.style.left == \"0px\" ? \"80%\" : \"0px\");\n    });\n    but.addEventListener(\"click\", (ev) => {\n\talert(\"yo\");\n    });\n    red.element.style.display = \"none\";\n    blue.element.style.display = \"none\";\n});\nfuture.setNthAction(1, (slip) => {\n    slip.delay = 1;\n});\n// When we enter red, we want that when we go back to future we do that \"smoothly\" (in 1s)\nlet red = new Slip(\"red\", \"red Slip\", [], engine, { firstVisit: (slip) => { future.delay = 1;}});\n\nlet blue = new Slip(\"blue\", \"blue Slip\", [], engine, {});\n\n// let scaleTest = new Slip(\"scale-test\", [], presentation, engine, {});\n\n\n// the \"c1\" elements have to be hidden for when \"future\" unzoom. They have to be shown as soon as we enter this slip.\n// let links = new Slip(\"links\", [], engine, {firstVisit: (slip) => {slip.revealAll(\".c1\");}});\n\n// at step 9, future unzooms the window\nfuture.setNthAction(10, (slip) => {\n    slip.savedX = slip.currentX; // saving initial coordinates inside slip\n    slip.savedY = slip.currentY; // so that they are accessible in the next action\n    engine.moveWindow(2,2,4,0,1);\n});\nfuture.setNthAction(11, (slip) => {\n    engine.moveWindow(slip.savedX,slip.savedY,1,0,1); // recovering initial position\n    red.element.style.display = \"inline-block\";\n    blue.element.style.display = \"inline-block\";\n});\nfuture.setNthAction(12, red);\nfuture.setNthAction(13, blue);\n// (slip) => {\n// \t// presentation.skipSlip({delay:1}); // Leaving \"future\" without finishing it\n// });\n\nrootSlip.setAction([\n    intro,\n    base,\n    beamerPart,\n    future,\n    // scaleTest,\n    // blue,\n    //    future, // coming back to the unfinished \"future\"\n    //    links,\n    // (slip) => {\n    \n    // }\n]);\n// presentation.setSlips([\n//     intro,\n//     base,\n//     beamerPart,\n//     future,\n//     // scaleTest,\n//     blue,\n//     future, // coming back to the unfinished \"future\"\n//     links,\n// ]);\nlet controller = new Controller(engine);\n"]}