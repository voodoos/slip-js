{"version":3,"sources":["src/modules/util.mjs","src/modules/engine.mjs","src/modules/controller.mjs","src/modules/slip.mjs","src/slip-lib.js"],"names":["myQueryAll","root","selector","avoid","id","Math","random","toString","substr","allElem","Array","from","querySelectorAll","other","filter","value","includes","cloneNoSubslip","elem","newElem","cloneNode","childNodes","forEach","child","classList","contains","placeholder","document","createElement","tagName","add","appendChild","replaceSubslips","clone","subslips","placeholders","subslip","index","replaceWith","rootElem","container","innerHTML","querySelector","slipElem","setTimeout","scaleContainer","fChild","slipContainer","firstChild","style","width","height","addEventListener","ev","console","log","layerX","layerY","body","cursor","timeOutIds","clearTimeout","push","openWindow","browserHeight","openWindowWidth","browserWidth","openWindowHeight","winX","winY","currentScale","currentRotate","universe","slips","counterToString","num","depth","result","roman","decimal","i","length","getOpenWindowHeight","getOpenWindowWidth","getCoord","x","y","scale","moveWindow","rotate","delay","transitionDuration","left","top","transform","moveWindowRelative","dx","dy","dscale","drotate","placeSlip","slip","parseFloat","getAttribute","slipScaleContainer","isNaN","max","offsetWidth","offsetHeight","placeSlips","rootDepth","map","reduce","a","b","placeOpenWindow","window","innerHeight","innerWidth","floor","right","bottom","transformOrigin","parseInt","zIndex","updateCounter","counters","stack","getActionIndex","res","next","showToC","currentSlide","n","getCurrentSlip","Slip","gotoSlip","pop","newCurrentSlide","getMaxNext","nextSlip","previous","currentSlip","previousSlip","getCoordinateInUniverse","getCoordInParen","globalScale","parseScale","split","c","getCoordIter","cInParent","offsetLeft","offsetTop","offsetParent","cParent","getComputedStyle","ret","centerX","centerY","moveToElement","element","options","coord","findSlipCoordinate","currentX","currentY","rootSlip","getSlipTree","name","getActionList","e","function","goToState","state","refreshAll","iter","toc","tree","displayTree","stackWithNumbers","containerElement","nameElement","innerText","fullName","ulElement","subtree","newStackWithNumbers","liElement","target","setTocElem","setRootSlip","getRootSlip","ng","engine","getEngine","setEngine","speedMove","key","refresh","canvas","display","shiftKey","actionL","initialHTML","clonedElement","outerHTML","MathJax","startup","promise","then","getCloned","setCloned","queryAll","quer","query","actionList","actionIndex","setActionIndex","actionI","setAction","setNthAction","action","getSubSlipList","doAttributes","str","opacity","remove","visibAt","staticAt","position","visibility","moveDownTo","moveUpTo","moveCenterTo","tocElem","updateToC","list","incrIndex","savedActionIndex","toReturn","doRefresh","firstVisit","init","whenLeaving","subSlipList","offset","d","reveal","revealAll","hide","hideAll","maxTemp","attr","strMax","abs","Engine","IEngine","Controller","IController","ISlip","Util","IUtil"],"mappings":"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","file":"slip-lib.js","sourceRoot":"..","sourcesContent":["export let myQueryAll = (root, selector, avoid) => {\n    avoid = avoid || \".slip\";\n    if (!root.id)\n\troot.id = '_' + Math.random().toString(36).substr(2, 15);;\n    let allElem = Array.from(root.querySelectorAll(selector));\n    let other = Array.from(root.querySelectorAll(\"#\"+root.id+\" \" + avoid + \" \" +selector));\n    return allElem.filter(value => !other.includes(value));\n};\n\nexport function cloneNoSubslip (elem) {\n    let newElem = elem.cloneNode(false);\n    elem.childNodes.forEach((child) => {\n\tif(child.classList && child.classList.contains(\"slip\")){\n\t    let placeholder = document.createElement(child.tagName);\n\t    placeholder.classList.add(\"toReplace\");\n\t    newElem.appendChild(placeholder);\n\t}\n\telse\n\t    newElem.appendChild(cloneNoSubslip(child));\n    });\n    return newElem;\n}\nexport function replaceSubslips(clone, subslips) {\n    let placeholders = myQueryAll(clone, \".toReplace\");\n    subslips.forEach((subslip, index) => {\n\tplaceholders[index].replaceWith(subslip);\n    });\n}","import { myQueryAll } from './util'\n\nexport default function (root) {\n    function prepareRoot (rootElem) {\n\tlet container = document.createElement(\"div\");\n\tcontainer.innerHTML = \n\t    '\t<div id=\"open-window\">\\\n\t    <div class=\"format-container\">\\\n\t    <div class=\"rotate-container\">\\\n\t\t<div class=\"scale-container\">\\\n\t\t    <div class=\"universe movable\" id=\"universe\">\\\n\t\t\t<div width=\"10000\" height=\"10000\" class=\"fog\"></div>\\\n                        <div class=\"placeHolder\"></div>\\\n\t\t    </div>\\\n\t\t</div>\\\n\t\t</div>\\\n\t    </div>\\\n\t</div>\\\n\t<div class=\"cpt-slip\">0</div>\\\n\t<div class=\"toc-slip\" style=\"display:none;\"></div>';\n\trootElem.replaceWith(container);\n\tcontainer.querySelector(\".placeHolder\").replaceWith(rootElem);\n\trootElem.querySelectorAll(\".slip\").forEach((slipElem) => {\n\t    setTimeout(() => {\n\t\tvar scaleContainer = document.createElement('div');\n\t\tvar slipContainer = document.createElement('div');\n\t\tscaleContainer.classList.add(\"slip-scale-container\");\n\t\tslipContainer.classList.add(\"slip-container\");\n\t\tlet fChild;\n\t\twhile((fChild = slipElem.firstChild)) {\n\t\t    slipContainer.appendChild(fChild);\n\t\t}\n\t\tscaleContainer.appendChild(slipContainer);\n\t\tslipElem.appendChild(scaleContainer);\n\t    },0);\n\t});\n\trootElem.style.width = \"unset\";\n\trootElem.style.height = \"unset\";\n\tdocument.querySelectorAll(\".background-canvas\").forEach((elem)=> {elem.addEventListener(\"click\", (ev) => { console.log(\"vous avez cliquez aux coordonnées : \", ev.layerX, ev.layerY); });});\t\n    }\n    prepareRoot(root);\n\n    // Constants\n    document.body.style.cursor = \"auto\";\n    let timeOutIds = [];\n    document.body.addEventListener(\"mousemove\", (ev) => {\n\ttimeOutIds.forEach((id) => { clearTimeout(id); });\n\tdocument.body.style.cursor = \"auto\";\n\ttimeOutIds.push(setTimeout(() => { document.body.style.cursor = \"none\";}, 5000));\n    });\n    let openWindow = document.querySelector(\"#open-window\");\n    let universe = document.querySelector(\"#universe\");\n    let slips = universe.querySelectorAll(\".slip:not(.root)\");\n    let browserHeight, openWindowWidth;\n    let browserWidth, openWindowHeight;\n    this.getOpenWindowHeight = () => openWindowHeight;\n    this.getOpenWindowWidth = () => openWindowWidth;\n\n    let winX, winY;\n    let currentScale, currentRotate;\n    this.getCoord = () => { return {x: winX, y: winY, scale: currentScale};};\n    this.moveWindow = function (x, y, scale, rotate, delay) {\n\tconsole.log(\"move to\", x, y, \"with scale, rotate, delay\", scale, rotate, delay);\n\tcurrentScale = scale;\n\tcurrentRotate = rotate;\n\twinX = x ;\n\twinY = y;\n\tconsole.log(x,y);\n\tsetTimeout(() => {\n\t    document.querySelector(\".scale-container\").style.transitionDuration = delay+\"s\";\n\t    document.querySelector(\".rotate-container\").style.transitionDuration = delay+\"s\";\n\t    universe.style.transitionDuration = delay+\"s, \"+delay+ \"s\"; \n\t    universe.style.left = -(x*1440 - 1440/2)+\"px\";\n\t    universe.style.top = -(y*1080 - 1080/2)+\"px\";\n\t    document.querySelector(\".scale-container\").style.transform = \"scale(\"+(1/scale)+\")\";\n\t    document.querySelector(\".rotate-container\").style.transform = \"rotate(\"+(rotate)+\"deg)\";\n\t},0);\n    };\n    this.moveWindowRelative = function(dx, dy, dscale, drotate, delay) {\n\tthis.moveWindow(winX+dx, winY+dy, currentScale+dscale, currentRotate+drotate, delay);\n    };\n    this.placeSlip = function(slip) {\n\t// console.log(\"debug Previous (slip)\", slip);\n\t// let posX = 0.5;\n\t// let posY = 0.5;\n\t// let x=parseFloat(slip.getAttribute(\"pos-x\")), y=parseFloat(slip.getAttribute(\"pos-y\"));\n\tlet scale = parseFloat(slip.getAttribute(\"scale\"));\n\t// // console.log(slip);\n\tlet slipScaleContainer = slip.querySelector(\".slip-scale-container\");\n\t// let rotate = 0;\n\tscale = isNaN(scale) ? 1 : scale ;\n\t// x = (isNaN(x) ? posX : x);\n\t// y = (isNaN(y) ? posY : y);\n\t// slip.setAttribute(\"pos-x\", x);\n\t// slip.setAttribute(\"pos-y\", y);\n\t// slip.setAttribute(\"scale\", scale);\n\t// slip.setAttribute(\"rotate\", rotate);\n\t// posX = x + 1;\n\t// posY = y;\n\t// slip.style.top = (y*1080 - 1080/2)+\"px\";\n\t// slip.style.left = (x*1440 - 1440/2)+\"px\";\n\t// if(!slip.classList.contains(\"permanent\"))\n\t// \tslip.style.zIndex = \"-1\";\n\t// slip.style.transformOrigin = \"50% 50%\";\n\tslipScaleContainer.style.transform = \"scale(\"+scale+\")\";\n\tslip.style.width = (Math.max(slipScaleContainer.offsetWidth, 1440))*scale+\"px\";\n\tslip.style.height = (Math.max(slipScaleContainer.offsetHeight, 1080))*scale+\"px\";\t\n    };\n    this.placeSlips = function () {\n\t// let posX = 0.5;\n\t// let posY = 0.5;\n\tlet depth = function (elem) {\n\t    console.log(\"debug depth (elem)\", elem);\n\t    let subslips = myQueryAll(elem, \".slip\");\n\t    console.log(\"debug depth (subslips)\", elem);\n\t    return 1+subslips.map(depth).reduce((a,b) => Math.max(a,b),0);\n\t};\n\tlet rootDepth = depth(document.body);\n\tconsole.log(\"debug\", rootDepth);\n\tfor(let i= 0; i<rootDepth; i++)\n\t    slips.forEach(this.placeSlip);\t\n    };\n    setTimeout(() => {\n\tthis.placeSlips();\n    },0);\n    this.placeOpenWindow = function () {\n\tbrowserHeight = window.innerHeight;\n\tbrowserWidth = window.innerWidth;\n\tif(browserHeight/3 < browserWidth/4) {\n\t    openWindowWidth = Math.floor((browserHeight*4)/3);\n\t    openWindowHeight = browserHeight;\n\t    openWindow.style.left = ((window.innerWidth - openWindowWidth) /2)+\"px\";\n\t    openWindow.style.right = ((window.innerWidth - openWindowWidth) /2)+\"px\";\n\t    openWindow.style.width = (openWindowWidth)+\"px\";\n\t    openWindow.style.top = \"0\";\n\t    openWindow.style.bottom = \"0\";\n\t    openWindow.style.height = (openWindowHeight)+\"px\";\n\t}\n\telse {\n\t    openWindowHeight = Math.floor((browserWidth*3)/4);\n\t    openWindowWidth = browserWidth;\n\t    openWindow.style.top = ((window.innerHeight - openWindowHeight) /2)+\"px\";\n\t    openWindow.style.bottom = ((window.innerHeight - openWindowHeight) /2)+\"px\";\n\t    openWindow.style.height = (openWindowHeight)+\"px\";\n\t    openWindow.style.right = \"0\";\n\t    openWindow.style.left = \"0\";\n\t    openWindow.style.width = openWindowWidth+\"px\";\n\t}\n\tdocument.querySelector(\".scale-container\").style.transformOrigin = (1440/2)+\"px \"+(1080/2)+\"px\";\n\tdocument.querySelector(\".rotate-container\").style.transformOrigin = (1440/2)+\"px \"+(1080/2)+\"px\";\n\tdocument.querySelector(\".format-container\").style.transform = \"scale(\"+(openWindowWidth/1440)+\")\";\n\tdocument.querySelector(\".cpt-slip\").style.right =  (parseInt(openWindow.style.left)) + \"px\";\n\tdocument.querySelector(\".cpt-slip\").style.bottom =  \"0\";\n\tdocument.querySelector(\".cpt-slip\").style.zIndex =  \"10\";\n    };\n    this.placeOpenWindow();\n    window.addEventListener(\"resize\", (ev) => {\n\tthis.placeOpenWindow();\n\tthis.moveWindow(winX, winY, currentScale, currentRotate, 0);\n    });\n\n    // Taken from https://selftaughtjs.com/algorithm-sundays-converting-roman-numerals\n    // Use in showing roman numbers for slip number\n    function counterToString(num, depth) {\n\tif(depth == 1 || depth > 3)\n\t    return num.toString();\n\tlet result = '';\n\tlet decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n\tlet roman;\n\tif(depth == 0)\n\t    roman = [\"M\", \"CM\",\"D\",\"CD\",\"C\", \"XC\", \"L\", \"XL\", \"X\",\"IX\",\"V\",\"IV\",\"I\"];\n\telse\n\t    roman = [\"m\", \"cm\",\"d\",\"cd\",\"c\", \"xc\", \"l\", \"xl\", \"x\",\"ix\",\"v\",\"iv\",\"i\"];\n\tfor (var i = 0;i<=decimal.length;i++) {\n\t    while (num%decimal[i] < num) {     \n\t\tresult += roman[i];\n\t\tnum -= decimal[i];\n\t    }\n\t}\n\treturn result;\n    }\n    this.updateCounter = function () {\n\tlet counters = stack.map((slip) => slip.getActionIndex());\n\tlet res = '';\n\tres += counterToString(counters[0]+1, 0);\n\tfor(let i = 1; i < stack.length; i++)\n\t    res += \".\" + counterToString(counters[i]+1, i);\n\tdocument.querySelector(\".cpt-slip\").innerHTML = res;\t\n    };\n    this.next = () => {\n\tif(document.querySelector(\".toc-slip\").innerHTML == \"\")\n\t    this.showToC();\n\t// return true if and only if the stack changed\n\tlet currentSlide = this.getCurrentSlip();\n\tlet n = currentSlide.next();\n\tthis.updateCounter();\n\tif(n instanceof Slip) {\n\t    this.gotoSlip(n);\n\t    this.push(n);\n\t    this.next();\n\t    // this.showToC();\n\t    return true;\n\t}\n\telse if(!n) {\n\t    this.pop();\n\t    let newCurrentSlide = this.getCurrentSlip();\n\t    this.gotoSlip(newCurrentSlide);\n\t    // newCurrentSlide.incrIndex();\n\t    if(stack.length > 1 || newCurrentSlide.getActionIndex() < newCurrentSlide.getMaxNext())\n\t\tthis.next();\n\t    // this.showToC();\n\t    return true;\n\t    // console.log(stack);\n\t}\n\t// this.showToC();\n\treturn false;\n    };\n    this.nextSlip = function () {\n\t// Do this.next() untill the stack change\n\twhile(!this.next()) {}\n    };\n    this.previous = () => {\n\tlet currentSlip = this.getCurrentSlip();\n\tlet n = currentSlip.previous();\n\tconsole.log(\"debug previous (currentSlip, n)\", currentSlip, n);\n\tif(n instanceof Slip) {\n\t    this.gotoSlip(n);\n\t    this.push(n);\n\t    // this.showToC();\n\t    return true;\n\t}\n\telse if(!n) {\n\t    this.pop();\n\t    let newCurrentSlide = this.getCurrentSlip();\n\t    this.gotoSlip(newCurrentSlide);\n\t    // newCurrentSlide.incrIndex();\n\t    if(stack.length > 1 || newCurrentSlide.getActionIndex() > -1)\n\t\tthis.previous();\n\t    // console.log(stack);\n\t    // this.showToC();\n\t    return true;\n\t}\n\t// this.showToC();\n\treturn false;\n\t// console.log(\"returned\", n);\n    };\n    this.previousSlip = function () {\n\t// Do this.previous() untill the stack change\n\twhile(!this.previous()) {}\n    };\n\n    this.getCoordinateInUniverse = function (elem) {\n\tconsole.log(\"debug getcoord elem\", elem);\n\tlet getCoordInParen = (elem) => {\n\t    return {x: elem.offsetLeft, y:elem.offsetTop};\t    \n\t};\n\tlet globalScale = 1;\n\tlet parseScale = function(transform) {\n\t    if (transform == \"none\")\n\t\treturn 1;\n\t    return parseFloat(transform.split(\"(\")[1].split(\",\")[0]);\n\t};\n\tlet getCoordIter = (elem) => {\n\t    let cInParent = getCoordInParen(elem);\n\t    if(elem.offsetParent.classList.contains(\"universe\"))\n\t    {\n\t\tconsole.log(\"universe\", cInParent);\n\t\treturn cInParent;\n\t    }\n\t    let cParent = getCoordIter(elem.offsetParent);\n\t    let style = window.getComputedStyle(elem.offsetParent);\n\t    // console.log(style);\n\t    let scale;\n\t    // console.log(\"style\", style.transform);\n\t    // if (style.transform == \"none\")\n\t    // \tscale = 1;\n\t    // else\n\t    // \tscale = parseFloat(style.transform.split(\"(\")[1].split(\",\")[0]);\n\t    scale = parseScale(style.transform);\n\t    // console.log(style.transform);\n\t    // console.log(\"scale\", scale);\n\t    // console.log(\"globalScale\", globalScale);\n\t    globalScale *= scale;\n\t    // let scale = 1 ; // Has to parse/compute the scale, for now always 1\n\t    // console.log(\"at step\",  \"cParent.x\", cParent.x, \"cInParen.x\", cInParent.x, \"scale\", scale);\n\t    return {x:cParent.x+cInParent.x*globalScale, y:cParent.y+cInParent.y*globalScale };\n\t};\n\tlet c = getCoordIter(elem);\n\tlet style = window.getComputedStyle(elem);\n\tlet scale = parseScale(style.transform);\n\tglobalScale *= scale;\n\tconsole.log(\"getCoord\", {x:c.x/1440+0.5, y:c.y/1080+0.5}, \"globalScale\", globalScale, style.transform, scale);\n\tlet ret = { x: c.x/1440,\n\t\t    y: c.y/1080,\n\t\t    centerX:c.x/1440+0.5*elem.offsetWidth/1440*globalScale,\n\t\t    centerY:c.y/1080+0.5*elem.offsetHeight/1080*globalScale,\n\t\t    width: elem.offsetWidth/1440*globalScale,\n\t\t    height: elem.offsetHeight/1080*globalScale,\n\t\t    scale: globalScale };\n\tconsole.log(ret);\n\treturn ret;\n\t// return {x:c.x/1440+elem*globalScale*scale, y:c.y/1080+0.5*globalScale*scale, scale: globalScale*scale};\n\t// return {x: this.element.offsetLeft/1440+0.5, y:this.element.offsetTop/1080+0.5};\n    };\n    this.moveToElement = function(element, options) {\n\tlet coord = this.getCoordinateInUniverse(element);\n\tlet actualSize = {width: element.offsetWidth*coord.scale, height: element.offsetHeight*coord.scale};\n\tif(options)\n\tthis.moveWindow(coord.x, coord.y, coord.scale, 0, options.delay ? options.delay : 1);\n    };\n    this.gotoSlip = function(slip, options) {\n\tconsole.log(\"we goto slip\");\n\toptions = options ? options : {};\n\tconsole.log(\"options is \", options);\n\tif(slip.element.classList.contains(\"slip\"))\n\t    setTimeout(() => {\n\t\tlet coord = slip.findSlipCoordinate();\n\t\tif(typeof slip.currentX != \"undefined\" && typeof slip.currentY != \"undefined\")\n\t\t    this.moveWindow(slip.currentX, slip.currentY, coord.scale, slip.rotate, options.delay ? options.delay : slip.delay);\n\t\telse\n\t\t    this.moveWindow(coord.x, coord.y, coord.scale, slip.rotate, options.delay ? options.delay : slip.delay);\n\t    },0);\n\telse\n\t    setTimeout(() => {\n\t\tconsole.log(\"debug slip element\", slip.element);\n\t\tlet coord = this.getCoordinateInUniverse(slip.element);\n\t\tthis.moveWindow(coord.centerX, coord.centerY, Math.max(coord.width, coord.height), 0, options.delay ? options.delay : slip.delay);\n\t    },0);\n    };\n    let rootSlip = new Slip(root.id, \"Presentation\", [], this, {});\n    let stack = [rootSlip];\n\n    // Stack Management:\n    this.push = function (n) {\n\tstack.push(n);\n\treturn ;\n    };\n    this.pop = function () {\n\tlet n = stack.pop();\n\tif(stack.length == 0)\n\t    stack.push(n);\n\treturn n;\n    };\n    this.getCurrentSlip = function () {\n\treturn stack[stack.length -1];\n    };\n    this.getSlipTree = function (slip) {\n\tslip = slip || rootSlip;\n\tif(slip instanceof Slip) \n\t    return {name: slip.name, slip: slip, subslips: slip.getActionList().map((e) => this.getSlipTree(e))};\n\treturn {function: true};\n    };\n\n    this.goToState = function(state) {\n\tlet iter = (state) => {\n\t    if(state.length == 0)\n\t\treturn;\n\t    iter(state[0]);\n\t    while(state[1].getActionIndex()<state[2])\n\t\tthis.next();\n\t};\n\tstack = [rootSlip];\n\trootSlip.refreshAll();\n\titer(state);\n\tthis.gotoSlip(state[1]);\n    };\n\n    this.showToC = function () {\n\tconsole.log(\"debug showtoc\");\n\tlet toc = document.querySelector(\".toc-slip\");\n\t// let innerHTML = \"\";\n\tlet globalElem = document.createElement(\"div\");\n\tlet tree = this.getSlipTree();\n\t// let before = true;\n\tlet displayTree = (tree, stackWithNumbers) => {\n\t    console.log(\"debug treee\", tree);\n\t    let containerElement = document.createElement(\"div\");\n\t    let nameElement = document.createElement(\"div\");\n\t    // if(before)\n\t    // \tnameElement.style.color = \"blue\";\n\t    // else\n\t    // \tnameElement.style.color = \"yellow\";\n\t    // if(tree.slip == this.getCurrentSlip()) {\n\t    // \tnameElement.style.color = \"red\";\n\t    // \tbefore = false;\n\t    // }\n\t\t\n\t    nameElement.innerText = tree.slip.fullName ? tree.slip.fullName : tree.slip.name ; //+ \" (\" + (tree.slip.getActionIndex()+1) + \"/\" + (tree.slip.getMaxNext()+1) + \")\";\n\t    containerElement.appendChild(nameElement);\n\t    // innerHTML += \"<div>\"+tree.name+\"</div>\";\n\t    if(tree.subslips.length > 0) {\n\t\tlet ulElement = document.createElement(\"ul\");\n\t\t// innerHTML += \"<ul>\";\n\t\ttree.subslips.forEach((subtree, index) => {\n\t\t    let newStackWithNumbers = [stackWithNumbers, tree.slip, index];\n\t\t    let liElement = document.createElement(\"li\");\n\t\t    // innerHTML += \"<li>\";\n\t\t    if(subtree.function) {\n\t\t\tliElement.innerText = \"\"+(index+1);\n\t\t\tliElement.classList.add(\"toc-function\");\n\t\t    } else\n\t\t\tliElement.appendChild(displayTree(subtree, newStackWithNumbers));\n\t\t    liElement.addEventListener(\"click\", (ev) => {\n\t\t    \tif(ev.target == liElement) {\n\t\t    \t    this.goToState(newStackWithNumbers);\n\t\t    \t    console.log(newStackWithNumbers);\n\t\t    \t}\n\t\t    });\n\t\t    ulElement.appendChild(liElement);\n\t\t    \n\t\t    // innerHTML += \"</li>\";\n\t\t});\n\t\tcontainerElement.appendChild(ulElement);\n\t\ttree.slip.setTocElem(containerElement);\n\t\t// innerHTML += \"</ul>\";\n\t    }\n\t    console.log(\"debug tree, will return\", containerElement);\n\t    // containerElement.addEventListener(\"click\", () => { console.log(stackWithNumbers);});\n\t    return containerElement;\n\t};\n\ttoc.innerHTML = \"\";\n\t// toc.innerHTML = innerHTML;\n\ttoc.appendChild(displayTree(tree, []));\n    };\n    \n    // this.getRootSlip = () => rootSlip;\n    this.setRootSlip = (root) => {\n\trootSlip = root;\n\tstack = [rootSlip];\n    };\n    this.getRootSlip = () => rootSlip;\n};","export default function (ng) {\n    let engine = ng;\n    this.getEngine = () => this.engine;\n    this.setEngine = (ng) => this.engine = ng;\n\n    // let mainSlip = mainS;\n    // this.getMainSlip = () => mainSlip;\n    // this.setMainSlip = (slip) => mainSlip = slip;\n\n    let speedMove=1;\n    document.addEventListener(\"keypress\", (ev) => {\n\tif(ev.key == \"f\") { speedMove = (speedMove + 4)%30+1; }    \n\tif(ev.key == \"r\") { engine.getCurrentSlip().refresh(); }    \n\tif(ev.key == \"#\") {\n\t    document.querySelectorAll(\".slip\").forEach((slip) => {slip.style.zIndex = \"-1\";});\n\t    document.querySelectorAll(\".background-canvas\").forEach((canvas) => {canvas.style.zIndex = \"1\";});\n\t}    \n    });\n    document.addEventListener(\"keydown\", (ev) => {\n\tlet openWindowHeight = engine.getOpenWindowHeight();\n\tlet openWindowWidth = engine.getOpenWindowWidth();\n\tif(ev.key == \"l\") { engine.moveWindowRelative( 0                          ,  (speedMove)/openWindowHeight, 0, 0, 0.1); }   // Bas\n\tif(ev.key == \"o\") { engine.moveWindowRelative( 0                          , -(speedMove)/openWindowHeight, 0, 0, 0.1); }  // Haut\n\tif(ev.key == \"k\") { engine.moveWindowRelative(-(speedMove)/openWindowWidth,  0                           , 0, 0, 0.1); }   // Gauche\n\tif(ev.key == \"m\") { engine.moveWindowRelative( (speedMove)/openWindowWidth,  0                           , 0, 0, 0.1); }   // Droite\n\tif(ev.key == \"i\") { engine.moveWindowRelative(0, 0,  0   ,  1, 0.1); }                             // Rotate \n\tif(ev.key == \"p\") { engine.moveWindowRelative(0, 0,  0   , -1, 0.1); }                             // Unrotate\n\tif(ev.key == \"z\") { engine.moveWindowRelative(0, 0,  0.01,  0, 0.1); }                          // Zoom\n\tif(ev.key == \"Z\") { engine.moveWindowRelative(0, 0, -0.01,  0, 0.1); }                          // Unzoom\n\tif(ev.key == \"T\") {\n\t    engine.showToC();\n\t    // document.querySelector(\".toc-slip\").style.display = document.querySelector(\".toc-slip\").style.display == \"none\" ? \"block\" : \"none\"; \n\t}   \n\tif(ev.key == \"t\") {\n\t    // engine.showToC();\n\t    document.querySelector(\".toc-slip\").style.display = document.querySelector(\".toc-slip\").style.display == \"none\" ? \"block\" : \"none\"; \n\t}   \n\tif(ev.key == \"ArrowRight\") {\n\t    console.log(ev);\n\t    if(ev.shiftKey)\n\t\tengine.nextSlip();\n\t    else    \n\t\tengine.next();\n\t}\n\telse if (ev.key == \"ArrowLeft\") {\n\t    if(ev.shiftKey)\n\t\tengine.previousSlip();\n\t    else    \n\t\tengine.previous();\n\t}\n\telse if (ev.key == \"ArrowUp\") {\n\t    engine.pop();\n\t}\n    });  \n    \n};\n","import { cloneNoSubslip, myQueryAll, replaceSubslips } from './util'\n\nexport default function (name, fullName, actionL, ng, options) {\n    let engine = ng;\n    this.fullName = fullName;\n    this.name = name;\n    \n    this.getEngine = () => engine;\n    this.setEngine = (ng) => engine = ng;\n    \n    // let presentation = present;\n    // this.getPresentation = () => presentation;\n    // this.setPresentation = (present) => presentation = present;\n    \n    this.element = document.querySelector(\"#\"+name);\n    console.log(this.element);\n    let initialHTML = this.element.outerHTML;\n    let clonedElement;\n    MathJax.startup.promise.then(() => {\n        // console.log('MathJax initial typesetting complete');\n\tsetTimeout(() => {clonedElement = cloneNoSubslip(this.element);},0);\n      });\n    let innerHTML = this.element.innerHTML;\n    this.getCloned = () => clonedElement;\n    this.setCloned = (c) => clonedElement = c;\n    \n    this.findSlipCoordinate = () => { // rename to getCoordInUniverse\n\tlet coord = engine.getCoordinateInUniverse(this.element);\n\tconsole.log(\"debug findslipcoordinate\", coord);\n\tcoord.scale *= this.scale;\n\tcoord.y = coord.y + 0.5*coord.scale;\n\tcoord.x = coord.centerX;\n\tconsole.log(\"debug findslipcoordinate\", coord);\n\treturn coord;\n    };\n    \n    this.scale = parseFloat(this.element.getAttribute(\"scale\"));\n    if(typeof this.scale == \"undefined\" || isNaN(this.scale)) this.scale = 1;\n    this.rotate = parseFloat(this.element.getAttribute(\"rotate\"));\n    this.delay = isNaN(parseFloat(this.element.getAttribute(\"delay\"))) ? 0 : (parseFloat(this.element.getAttribute(\"delay\")));\n    \n    let coord = this.findSlipCoordinate();\n    console.log(coord);\n    this.x = coord.x;\n    this.y = coord.y;\n    \n    this.queryAll = (quer) => {\n\tlet allElem = Array.from(this.element.querySelectorAll(quer));\n\t// console.log(\"allElem\", allElem);\n\tlet other = Array.from(this.element.querySelectorAll(\"#\"+name+\" .slip \"+quer));\n\t// console.log(\"other\", other, \".slide \"+quer);\n\treturn allElem.filter(value => !other.includes(value));\n    };\n    this.query = (quer) => {\n\treturn this.queryAll(quer)[0];\n    };\n    let actionList = actionL;\n    let actionIndex = -1;\n    // let actionIndex=-1;\n    this.setActionIndex = (actionI) => actionIndex = actionI;\n    this.getActionIndex = () => actionIndex;\n    this.setAction = (actionL) => {actionList = actionL;};\n    this.getActionList = () => {\n\tlet ret = [];\n\tfor(let i = 0;i <= this.getMaxNext(); i++) {\n\t    if(typeof actionList[i] == \"function\" || actionList[i] instanceof Slip)\n\t\tret[i] = actionList[i];\n\t    else\n\t\tret[i] = () => {};\n\t}\n\treturn ret;\n    };\n    this.setNthAction = (n,action) => {actionList[n] = action;};\n\n    this.getSubSlipList = function () {\n\treturn actionList.filter((action) => action instanceof Slip);\n    };\n    \n    this.doAttributes = () => {\n\tthis.queryAll(\"*[mk-hidden-at]\").forEach((elem) => {\n\t    let hiddenAt = elem.getAttribute(\"mk-hidden-at\").split(\" \").map((str) => parseInt(str));\n\t    if(hiddenAt.includes(actionIndex))\n\t\telem.style.opacity = \"0\";});\t\n\tthis.queryAll(\"*[mk-visible-at]\").forEach((elem) => {\n\t    let visibleAt = elem.getAttribute(\"mk-visible-at\").split(\" \").map((str) => parseInt(str));\n\t    if(visibleAt.includes(actionIndex))\n\t\telem.style.opacity = \"1\";});\t\n\tthis.queryAll(\"*[mk-emphasize-at]\").forEach((elem) => {\n\t    let emphAt = elem.getAttribute(\"mk-emphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(emphAt.includes(actionIndex))\n\t\telem.classList.add(\"emphasize\");});\t\n\tthis.queryAll(\"*[mk-unemphasize-at]\").forEach((elem) => {\n\t    let unemphAt = elem.getAttribute(\"mk-unemphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(unemphAt.includes(actionIndex))\n\t\telem.classList.remove(\"emphasize\");});\t\n\tthis.queryAll(\"*[emphasize-at]\").forEach((elem) => {\n\t    let emphAt = elem.getAttribute(\"emphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(emphAt.includes(actionIndex))\n\t\telem.classList.add(\"emphasize\");\n\t    else\n\t\telem.classList.remove(\"emphasize\");\n\t});\t\n\tthis.queryAll(\"*[chg-visib-at]\").forEach((elem) => {\n\t    let visibAt = elem.getAttribute(\"chg-visib-at\").split(\" \").map((str) => parseInt(str));\n\t    if(visibAt.includes(actionIndex))\n\t\telem.style.opacity = \"1\";\n\t    if(visibAt.includes(-actionIndex))\n\t\telem.style.opacity = \"0\";\n\t});\t\n\tthis.queryAll(\"*[static-at]\").forEach((elem) => {\n\t    let staticAt = elem.getAttribute(\"static-at\").split(\" \").map((str) => parseInt(str));\n\t    if(staticAt.includes(-actionIndex)){\n\t\telem.style.position = \"absolute\";\n\t\telem.style.visibility = \"hidden\";\n\t    }\n\t    if(staticAt.includes(actionIndex)) {\n\t\telem.style.position = \"static\";\n\t\telem.style.visibility = \"visible\";\n\t    }\n\t});\t    \n\tthis.queryAll(\"*[down-at]\").forEach((elem) => {\n\t    let goDownTo = elem.getAttribute(\"down-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goDownTo.includes(actionIndex))\n\t\tthis.moveDownTo(elem, 1);\n\t});\n\tthis.queryAll(\"*[up-at]\").forEach((elem) => {\n\t    let goTo = elem.getAttribute(\"up-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goTo.includes(actionIndex))\n\t\tthis.moveUpTo(elem, 1);});\n\tthis.queryAll(\"*[center-at]\").forEach((elem) => {\n\t    let goDownTo = elem.getAttribute(\"center-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goDownTo.includes(actionIndex))\n\t\tthis.moveCenterTo(elem, 1);});\t\n    };\n\n    this.setTocElem = (tocElem) => {this.tocElem = tocElem;};\n    this.updateToC = () => {\n\tif(!this.tocElem)\n\t    return;\n\tlet list = myQueryAll(this.tocElem, \"li\", \"li\");\n\tconsole.log(\"debug updateToc\", this.name, list);\n\tlet i;\n\tfor(i=0;i<this.getActionIndex(); i++) {\n\t    console.log(\"debug updateToc, before with i=\", i);\n\t    list[i].classList.remove(\"before\", \"after\", \"current\");\n\t    list[i].classList.add(\"before\");\t    \n\t}\n\t// if(i!=0) i++;\n\tif(i<=this.getActionIndex()) {\n\t    console.log(\"debug updateToc, current with i=\", i);\n\t    list[i].classList.remove(\"before\", \"after\", \"current\");\n\t    list[i].classList.add(\"current\");\n\t    i++;\n\t}\n\tfor(i;i<=this.getMaxNext(); i++) {\n\t    console.log(\"debug updateToc, after with i=\", i);\n\t    list[i].classList.remove(\"before\", \"after\", \"current\");\n\t    list[i].classList.add(\"after\");\n\t}\t\n    };\n    this.incrIndex = () => {\n\tconsole.log(\"incrIndex\");\n\tactionIndex = actionIndex+1;\n\tthis.doAttributes();\n\tthis.updateToC();\n\t// if(this.tocElem)\n\t//     this.tocElem.innerText = actionIndex;\n\t// this.hideAndShow();\n    };\n    \n    this.next = function () {\n\t// if(actionIndex == -1) {\n\t//     this.incrIndex();\n\t//     this.firstVisit();\n\t//     return true;\n\t// }\n\tif(actionIndex >= this.getMaxNext())\n\t    return false;\n\tthis.incrIndex();\n\t// console.log(actionList);\n\tif(typeof actionList[actionIndex] == \"function\") {\n\t    // console.log(\"here\");\n\t    actionList[actionIndex](this);\n\t}\n\tif(actionList[actionIndex] instanceof Slip){\n\t    // if(!actionList[actionIndex].next()) {\n\t    // \t// actionIndex += 1;\n\t    // \tthis.incrIndex();\n\t    // }\n\t    return actionList[actionIndex];\n\t}\n\t// else\n\t//     this.incrIndex();\n\t// }, 0);\n\t// this.incrIndex();\n\treturn true;\n    };\n    this.previous = () => {\n\tlet savedActionIndex = this.getActionIndex();\n\tthis.doRefresh();\n\tif(savedActionIndex == -1)\n\t    // this.previousSlip();\n\t    return false;\n \tlet toReturn;\n\twhile(this.getActionIndex()<savedActionIndex-1)\n\t    toReturn = this.next();\n\treturn toReturn;\n\t// this.setCpt();\n    };\n\n    this.firstVisit = () => {\n\tthis.updateToC();\n\tif(options.firstVisit)\n\t    options.firstVisit(this);\n    };\n    this.init = () => {\n\tthis.queryAll(\"*[chg-visib-at]\").forEach((elem) => {\n\t    elem.style.opacity = \"0\";\n\t});\t\n\tthis.queryAll(\"*[static-at]\").forEach((elem) => {\n\t    elem.style.position = \"absolute\";\n\t    elem.style.visibility = \"hidden\";\n\t});\t\n\tthis.doAttributes();\n\tif(options.init)\n\t    options.init(this);\n    };\n    this.whenLeaving = () => {\n\tif(options.whenLeaving)\n\t    options.whenLeaving(this);\n    };\n\t\n    this.refresh = () => {\n\tif(actionList[actionIndex] instanceof Slip)\n\t    actionList[actionIndex].refresh();\n\telse\n\t    this.doRefresh();\n    };\n    this.refreshAll = () => {\n\tactionList.filter((elem) => elem instanceof Slip).forEach((subslip) => { subslip.refreshAll();});\n\tthis.doRefresh();\n    };\n    this.doRefresh = () => {\n\tthis.setActionIndex(-1);\n\tlet subSlipList = myQueryAll(this.element, \".slip\");;\n\tlet clone = clonedElement.cloneNode(true);\n\treplaceSubslips(clone, subSlipList);\n\tthis.element.replaceWith(clone);\n\tthis.element = clone;\n\t// if(typeof hljs != \"undefined\")\n\t//     document.querySelectorAll('pre code').forEach((block) => {\n\t// \thljs.highlightBlock(block);\n\t//     });\n\t// if(MathJax && typeof MathJax.typeset == \"function\")\n\t//     MathJax.typeset();\n\t// else if (MathJax && MathJax.Hub && typeof MathJax.Hub.Typeset == \"function\")\n\t//     MathJax.Hub.Typeset();\n\tthis.init();\n\tthis.firstVisit();\n\tdelete(this.currentX);\n\tdelete(this.currentY);\n\tengine.gotoSlip(this);\n\t// console.log(\"ai\", actionIndex);\n    };\n    this.init(this, engine);\n    this.moveUpTo = (selector, delay,  offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0.0125;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop)/1080-offset)*coord.scale;\n\t    this.currentX = coord.x;\n\t    this.currentY = coord.y+d;\n\t    engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.moveDownTo = (selector, delay, offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0.0125;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop+elem.offsetHeight)/1080 - 1 + offset)*coord.scale;\n\t    this.currentX = coord.x;\n\t    this.currentY = coord.y+d;\n\t    engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.moveCenterTo = (selector, delay, offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop+elem.offsetHeight/2)/1080-1/2+offset)*coord.scale;\n\t    this.currentX = coord.x;\n\t    this.currentY = coord.y+d;\n\t    engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.reveal = (selector) => {\n\tthis.query(selector).style.opacity = \"1\";\n    };\n    this.revealAll = (selector) => {\n\tthis.queryAll(selector).forEach((elem) => { elem.style.opacity = \"1\";});\n    };\n    this.hide = (selector) => {\n\tthis.query(selector).style.opacity = \"0\";\n    };\n    this.hideAll = (selector) => {\n\tthis.queryAll(selector).forEach((elem) => { elem.style.opacity = \"0\";});\n    };\n    this.getMaxNext = () => {\n\tlet maxTemp = actionList.length;\n\t[\"mk-visible-at\",\n\t \"mk-hidden-at\",\n\t \"mk-emphasize-at\",\n\t \"mk-unemphasize-at\",\n\t \"emphasize-at\",\n\t \"chg-visib-at\",\n\t \"up-at\",\n\t \"down-at\",\n\t \"center-at\",\n\t \"static-at\",\n\t].forEach((attr) => {\n\t     this.queryAll(\"*[\"+attr+\"]\").forEach((elem) => {\n\t\t elem.getAttribute(attr).split(\" \").forEach((strMax) => {\n\t\t     maxTemp = Math.max(Math.abs(parseInt(strMax)),maxTemp);\n\t\t });\n\t     });\n\t });\n\treturn maxTemp;\t\n    };\n}\n","import IEngine from './modules/engine'\nimport IController from './modules/controller.mjs'\nimport ISlip from './modules/slip'\nimport * as IUtil from './modules/util'\n\n/**\n * Allows slip-js to be used as a module\n */\nexport const Engine = IEngine;\nexport const Controller = IController;\nexport const Slip = ISlip;\nexport const Util = IUtil;\n\n/**\n * Allows slip-js to be used as simple CDN-included file\n */\nwindow.Engine = IEngine;\nwindow.Controller = IController;\nwindow.Slip = ISlip;\nwindow.Util = IUtil;"]}